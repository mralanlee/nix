#!/usr/bin/env bash

# Audio Device Dropdown Menu for Waybar
# Shows a dropdown menu to select audio output device

# Get all available sinks
sinks=$(wpctl status | sed -n '/Sinks:/,/Sources:/p' | grep -E '^\s*â”‚\s*\*?\s*[0-9]+\.' | sed 's/^\s*â”‚\s*//')

# Get current default sink ID
current_sink=$(echo "$sinks" | grep '^\*' | sed 's/^\*\s*//' | cut -d. -f1)

# Build menu options
menu_options=""
declare -A sink_map

while IFS= read -r line; do
    if [[ -n "$line" ]]; then
        # Clean the line by removing leading asterisk and spaces
        clean_line=$(echo "$line" | sed 's/^\*\s*//')
        # Extract ID (handles both with and without asterisk)
        id=$(echo "$clean_line" | sed 's/^\s*//' | cut -d. -f1)
        # Extract name
        name=$(echo "$clean_line" | cut -d. -f2- | sed 's/^\s*//' | sed 's/\s*\[vol:.*$//')
        
        # Check if this is the current device by comparing IDs
        if echo "$line" | grep -q '^\*'; then
            menu_options+="ðŸ”Š $name\n"
        else
            menu_options+="   $name\n"
        fi
        
        sink_map["$name"]="$id"
        sink_map["ðŸ”Š $name"]="$id"
    fi
done <<< "$sinks"

# Show menu with wofi (or fallback to rofi)
if command -v wofi &> /dev/null; then
    selected=$(echo -e "$menu_options" | wofi --dmenu --prompt "Audio Output" --width 400 --height 200)
elif command -v rofi &> /dev/null; then
    selected=$(echo -e "$menu_options" | rofi -dmenu -p "Audio Output" -theme "$HOME/.config/rofi/material-theme.rasi")
else
    notify-send "Error" "Neither wofi nor rofi found" -t 3000
    exit 1
fi

# Switch to selected device
if [[ -n "$selected" ]]; then
    # Trim whitespace from selected item
    selected=$(echo "$selected" | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
    
    # Try to find the ID in the sink_map
    selected_id="${sink_map[$selected]}"
    
    # Debug output
    echo "Selected: '$selected'" >&2
    echo "Selected ID: '$selected_id'" >&2
    
    if [[ -n "$selected_id" ]]; then
        wpctl set-default "$selected_id"
        clean_name=$(echo "$selected" | sed 's/^ðŸ”Š //' | sed 's/^   //')
        notify-send "Audio Output" "Switched to: $clean_name" -t 2000 -i audio-volume-high
    else
        # If direct lookup failed, try all keys
        for key in "${!sink_map[@]}"; do
            if [[ "$key" == *"$selected"* ]] || [[ "$selected" == *"$key"* ]]; then
                selected_id="${sink_map[$key]}"
                wpctl set-default "$selected_id"
                clean_name=$(echo "$key" | sed 's/^ðŸ”Š //' | sed 's/^   //')
                notify-send "Audio Output" "Switched to: $clean_name" -t 2000 -i audio-volume-high
                break
            fi
        done
    fi
fi